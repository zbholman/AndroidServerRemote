from Message import Message
import json

'''
This method takes a json string, converts it into a python dictionary object and the returns it as a Message object
This is how you go from a message your subsystem gets on the serial port to a usable message object with variables
The Key in contents['Key'] must match the standard abbreviations for message properties
'''
def ConvertFromJSON(json_string):
    contents = json.loads(json_string)
    return Message(contents['CID'], contents['OID'], contents['DID'], contents['TS'], contents['TTL'], contents['PLD'], contents['UID'], contents['CKS'])

#This simulates sending a message. Note the absense of a checksum and uuid - this is autogenerated at the creation of the Message object
sendMessage = Message('car10393','CC','ML','12:42:213', 100, 'payload: This message format defined by subteams')
communication = sendMessage.ConvertToJSON()
print(communication)

#This simulates recieving a message. Note the call to check the message checksum after it has been converted to an object
receivedMessage = ConvertFromJSON(communication)
print(receivedMessage.ConvertToJSON())
print("The two checksums matched:", receivedMessage.CompareChecksum())

