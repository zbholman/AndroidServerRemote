package com.example.tapanapatel.drivetrainfinal;

import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.View;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ToggleButton;
import org.json.JSONObject;
import org.json.JSONArray;
import com.jcraft.jsch.ChannelExec;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.Session;
import java.util.Properties;
import android.widget.ImageButton;
import android.widget.CompoundButton;

public class MainActivity extends AppCompatActivity {
        ToggleButton tg1, tg2, tg3, tg4;

        tg1 = (ToggleButton) findViewById(R.id.toggleButton1);
        tg2 = (ToggleButton) findViewById(R.id.toggleButton2);
        tg3 = (ToggleButton) findViewById(R.id.toggleButton3);
        tg4 = (ToggleButton) findViewById(R.id.toggleButton4);



        // Create Toggle for P, R ,N, D
        final ToggleButton ToggleP = (ToggleButton) findViewById(R.id.toggleButton1);
        final ToggleButton ToggleR = (ToggleButton) findViewById(R.id.toggleButton2);
        final ToggleButton ToggleN = (ToggleButton) findViewById(R.id.toggleButton3);
        final ToggleButton ToggleD = (ToggleButton) findViewById(R.id.toggleButton4);

        ToggleD.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {

            // Function that gets called toggled
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                // If the toggle is switched to "ON" run the following
                // Drive
                if (isChecked) {
                    boolean success = true;

                    // Turn off other lights to avoid conflict
                    ToggleN.setChecked(false);
                    ToggleP.setChecked(false);
                    ToggleR.setChecked(false);

                } else {
                    boolean success = true;


                }
            }
        });

        ToggleR.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {

            // Function that gets called toggled
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                // If the toggle is switched to "ON" run the following
                // Reverse
                if (isChecked) {
                    boolean success = true;

                    // Turn off other lights to avoid conflict
                    ToggleN.setChecked(false);
                    ToggleP.setChecked(false);
                    ToggleD.setChecked(false);

                } else {
                    boolean success = true;


                }
            }
        });

        ToggleN.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {

            // Function that gets called toggled
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                // If the toggle is switched to "ON" run the following
                // Neutral
                if (isChecked) {
                    boolean success = true;

                    // Turn off other lights to avoid conflict
                    ToggleD.setChecked(false);
                    ToggleP.setChecked(false);
                    ToggleR.setChecked(false);

                } else {
                    boolean success = true;


                }
            }
        });

        ToggleP.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {

            // Function that gets called toggled
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                // If the toggle is switched to "ON" run the following
                // Park
                if (isChecked) {
                    boolean success = true;

                    // Turn off other lights to avoid conflict
                    ToggleN.setChecked(false);
                    ToggleD.setChecked(false);
                    ToggleR.setChecked(false);

                } else {
                    boolean success = true;


                }
            }
        });

        Object ib1 = (ImageButton) findViewById(R.id.ImageButton1);
        Object ib2 = (ImageButton) findViewById(R.id.ImageButton2);
        Object ib3 = (ImageButton) findViewById(R.id.ImageButton3);
        Object ib4 = (ImageButton) findViewById(R.id.ImageButton4);

        // Create Toggle for up, down ,right, left
        final ImageButton Imageup = (ImageButton) findViewById(R.id.ImageButton1);
        final ImageButton Imagedown =(ImageButton) findViewById(R.id.ImageButton2);
        final ImageButton Imageleft = (ImageButton) findViewById(R.id.ImageButton3);
        final ImageButton Imageright = (ImageButton) findViewById(R.id.ImageButton4);

    }
